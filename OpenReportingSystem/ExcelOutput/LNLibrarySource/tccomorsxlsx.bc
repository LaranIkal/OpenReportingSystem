|******************************************************************************
|* Title	: tccomorsxlsx - ttstpconv report output delimited file to xlsx Excel format
|* Author	: Carlos Kassab
|* Date		: June,06,2019
|******************************************************************************
|* Script Type	: 3GL
|****************************** DECLARATION SECTION ***************************

	extern	domain	tcmcs.str132	program_name
	extern	domain	tcmcs.str132	prog_arguments
                  string				tmp.file1(1024), tmp.xlsx.file1(1024)	| Temporary file names.
                  string				tmp.file_r(1024)
                  string				local.path(1024)		| Client Location for report.
                  string				file_to_email(1024)	
                  string				start(1024)					| Start command
                  string				application(132)		| Application to start.
                  long					app_id							| Application id.
                  string				device.parameters(50)	
 
	extern	domain	tcmcs.long		retval
	extern	domain	tcmcs.long		fileid1
	extern	domain	tcmcs.long		err
	extern	        string				monthnum(2),daynum(2)	|Actual date 
	extern	        long					utc.func.ret, ret
	extern	        long					_yearno, _monthno, _month_dayno, _hours, _minutes, _seconds
	
	#pragma used dll ottdllbw
	#pragma used dll ottdllhtml
	#include <bic_desktop>	
	
function main()
{
  |For development and testing, use temporary file tmp.file1 on development machine.
	tmp.file1 = creat.tmp.file$( bse.tmp.dir$() )
	tmp.xlsx.file1 = tmp.file1 & ".xlsx" | This will be the final converted file name.
  
  | Arguments description
	|message("argument1:" & argv$(1)) | tmp file created from report output
	|message("argument2:" & argv$(2)) | path to file in device setup
	|message("argument3:" & argv$(3)) | arguments parameter in device setup
	|message("argument4:" & argv$(4)) | This is wt value, still waiting to know description.
	|message("argument5:" & argv$(5)) | at this time this value is comming empty
	
	wait.and.activate( "ttstpconv", argv$(1), tmp.file1, argv$(3), argv$(4) )
	
	| Running script to convert delimited file to xlsx format, file name in variable tmp.xlsx.file1
	program_name = "/OpenReportingSystem/ExcelOutput/ORSEXCEL.bat"
	prog_arguments = tmp.file1 & " " & tmp.xlsx.file1 & " " & spool.report
	retval = run.prog( program_name, prog_arguments, RP_WAIT )
	
	if job.process then
  
		utc.func.ret = utc.to.date(utc.num(), _yearno, _monthno, _month_dayno, _hours, _minutes, _seconds)	
    
		monthnum = str$(_monthno)
		if _monthno < 10 then		
			monthnum = "0" & str$(_monthno)
		endif
		
		daynum = str$(_month_dayno)
		if _month_dayno < 10 then		
			daynum = "0" & str$(_month_dayno)
		endif	
    
		file_to_email = bse.tmp.dir$() & "/"	& spool.report & "_" & monthnum & daynum & str$(_yearno) & ".xlsx"
		file.cp( tmp.xlsx.file1, file_to_email )
    
	else
  
		if tc.is.html.ui() then			
			client.download.file( tmp.xlsx.file1 )
		else
		
			local.path = "${BSE_TMP}/" & str$(utc.num()) & ".xlsx" 
			
			err = server2client( tmp.xlsx.file1, local.path, false, false,false )

			if (err) then
				message("Could not copy file to client")
			else
				application = "excel.exe"
				start = application & " " & get.local.filename()
				app_id = start.application.local(start,0,err)
			endif
			
		endif
    
	endif
	
	retval = seq.unlink(tmp.file1) |For development and testing, comment this line to avoid file deletion.
}



